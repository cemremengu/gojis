// Code generated by "stringer -type=Type"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Unknown-0]
	_ = x[LineTerminator-1]
	_ = x[Whitespace-2]
	_ = x[MultiLineComment-3]
	_ = x[SingleLineComment-4]
	_ = x[CommonToken-5]
	_ = x[IdentifierName-6]
	_ = x[Punctuator-7]
	_ = x[NumericLiteral-8]
	_ = x[StringLiteral-9]
	_ = x[Template-10]
	_ = x[ReservedWord-11]
	_ = x[Null-12]
	_ = x[Boolean-13]
	_ = x[DecimalLiteral-14]
	_ = x[BinaryIntegerLiteral-15]
	_ = x[OctalIntegerLiteral-16]
	_ = x[HexIntegerLiteral-17]
	_ = x[RegularExpressionLiteral-18]
	_ = x[Yield-19]
	_ = x[Await-20]
	_ = x[This-21]
	_ = x[NewType-22]
	_ = x[Super-23]
	_ = x[Target-24]
	_ = x[Delete-25]
	_ = x[Void-26]
	_ = x[Typeof-27]
	_ = x[UnsignedRightShiftAssign-28]
	_ = x[Ellipsis-29]
	_ = x[LeftShiftAssign-30]
	_ = x[UnsignedRightShift-31]
	_ = x[RightShiftAssign-32]
	_ = x[StrictEquals-33]
	_ = x[StrictNotEquals-34]
	_ = x[PowerAssign-35]
	_ = x[LeftShift-36]
	_ = x[LessThanOrEqualTo-37]
	_ = x[RightShift-38]
	_ = x[GreaterThanOrEqualTo-39]
	_ = x[Equals-40]
	_ = x[NotEquals-41]
	_ = x[UpdatePlus-42]
	_ = x[UpdateMinus-43]
	_ = x[Power-44]
	_ = x[LogicalAnd-45]
	_ = x[LogicalOr-46]
	_ = x[PlusAssign-47]
	_ = x[MinusAssign-48]
	_ = x[MultiplyAssign-49]
	_ = x[ModuloAssign-50]
	_ = x[AndAssign-51]
	_ = x[OrAssign-52]
	_ = x[XorAssign-53]
	_ = x[Arrow-54]
	_ = x[GreaterThan-55]
	_ = x[Dot-56]
	_ = x[SemiColon-57]
	_ = x[Comma-58]
	_ = x[Tilde-59]
	_ = x[LessThan-60]
	_ = x[ParOpen-61]
	_ = x[ParClose-62]
	_ = x[BraceOpen-63]
	_ = x[BraceClose-64]
	_ = x[BracketOpen-65]
	_ = x[BracketClose-66]
	_ = x[LogicalNot-67]
	_ = x[Plus-68]
	_ = x[Minus-69]
	_ = x[Multiply-70]
	_ = x[Modulo-71]
	_ = x[BitwiseAnd-72]
	_ = x[BitwiseOr-73]
	_ = x[BitwiseXor-74]
	_ = x[BitwiseNot-75]
	_ = x[QuestionMark-76]
	_ = x[Colon-77]
	_ = x[Assign-78]
	_ = x[DivAssign-79]
	_ = x[Div-80]
}

const _Type_name = "UnknownLineTerminatorWhitespaceMultiLineCommentSingleLineCommentCommonTokenIdentifierNamePunctuatorNumericLiteralStringLiteralTemplateReservedWordNullBooleanDecimalLiteralBinaryIntegerLiteralOctalIntegerLiteralHexIntegerLiteralRegularExpressionLiteralYieldAwaitThisNewTypeSuperTargetDeleteVoidTypeofUnsignedRightShiftAssignEllipsisLeftShiftAssignUnsignedRightShiftRightShiftAssignStrictEqualsStrictNotEqualsPowerAssignLeftShiftLessThanOrEqualToRightShiftGreaterThanOrEqualToEqualsNotEqualsUpdatePlusUpdateMinusPowerLogicalAndLogicalOrPlusAssignMinusAssignMultiplyAssignModuloAssignAndAssignOrAssignXorAssignArrowGreaterThanDotSemiColonCommaTildeLessThanParOpenParCloseBraceOpenBraceCloseBracketOpenBracketCloseLogicalNotPlusMinusMultiplyModuloBitwiseAndBitwiseOrBitwiseXorBitwiseNotQuestionMarkColonAssignDivAssignDiv"

var _Type_index = [...]uint16{0, 7, 21, 31, 47, 64, 75, 89, 99, 113, 126, 134, 146, 150, 157, 171, 191, 210, 227, 251, 256, 261, 265, 272, 277, 283, 289, 293, 299, 323, 331, 346, 364, 380, 392, 407, 418, 427, 444, 454, 474, 480, 489, 499, 510, 515, 525, 534, 544, 555, 569, 581, 590, 598, 607, 612, 623, 626, 635, 640, 645, 653, 660, 668, 677, 687, 698, 710, 720, 724, 729, 737, 743, 753, 762, 772, 782, 794, 799, 805, 814, 817}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
